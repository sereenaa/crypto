name: Deploy to AWS ECR on Code Commit

on:
  push:
    branches:
      - pop-index-transactions

jobs:
  build-and-push:
    name: Build and Push Docker image to AWS ECR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-and-push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: proof-of-play
      run: |
        tag=${{ github.ref == 'refs/heads/pop-index-transactions' && 'transactions-latest' || 'latest' }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$tag .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$tag
      outputs:
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.ref == 'refs/heads/pop-index-transactions' && 'transactions-latest' || 'latest' }}

    - name: Update ECS task definition
      id: update_task
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ecs-task-definition.json
        container-name: proof-of-play
        image: ${{ steps.build-and-push.outputs.image }}

    - name: Deploy ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        cluster: proof-of-play
        wait-for-service-stability: true